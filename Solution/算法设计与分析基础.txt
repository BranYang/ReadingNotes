第一章
1.1.4
Q : 设计一个计算floor(sqrt(n))的算法，n为任意正整数。除了赋值与比较运算，该算法只能用到基本的四则运算操作。
A : 
for i <- 1 to n do:
    p = i * i
    if p < n:
        i += 1
    else if p > n:
        return i - 1
    else:
        return i


1.1.5
Q : 设计一个算法，在一家排序的两个列表中，找出所以相同的元素。例如，列表 [2, 5, 5, 5] 和 [2, 2, 3, 5, 5, 7] 应该输出 [2, 5, 5]。 如果给定的两个列表的长度分别为m 和 n, 你设计的算法的最大比较次数应该是多少？
A :
i <- 0
j <- 0
while (i != m - 1) and (j != n - 1)
    if lst1[i] < lst2[j]:
        i <- min(i+1, m-1)
    elif lst1[i] > lst2[j]:
        j <- min(j+1, n-1)
    elif lst1[i] = lst2[j]:
        result + = lst1[i]
        i <- min(i+1, m-1)
        j <- min(j+1, n-1)
return result

1.1.6:
A :
a. : gcd(314315, 14142) = 1

b. : 14142倍
